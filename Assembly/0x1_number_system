I- Introduction
- Every number system uses a positional value
- Each position has a different positional value
- Each position is power of its base
    Example:
        Bit value        |  1  |  1  |  1  |  1  |  1  |  1  |  1  |  1  | 
        -----------------|-----|-----|-----|-----|-----|-----|-----|-----|
        Positional value | 2^7 | 2^6 | 2^5 | 2^4 | 2^3 | 2^2 | 2^1 | 2^0 | 
        -----------------|-----|-----|-----|-----|-----|-----|-----|-----|
        Positional value | 128 | 64  | 32  | 16  |  8  |  4  |  2  |  1  |   
- Hexadecimal number system uses base 16
- Hexadecimal digits are { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
- By convention A - F represents 10 - 15
- Hexadecimals are used for abrivating lengthy binary representation
- Hexadecimals basically represents binary data
- Divide each value and expressing value of each byte
    Example
        Binary Numver   | 1000 | 1100 | 1101 | 0001 |
        ----------------|------|------|------|------|
        Hexadecimal     |  8   |  C   |  D   |  1   |
- Counting in hexadecimal 
    Hexadecimal     | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 |  A |  B |  C |  D |  E |  F | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 1A | 1B | 1C | 1D | 1E | 1F | 20 | 21 | 22 |
    Decimal         | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 32 | 33 | 34 |
- From Hex to Decimal
    C6F0DBH
     - B X         1 = 11 X         1 =         11
     - D X        16 = 13 X        16 =        208
     - 0 X       256 =  0 X       256 =          0
     - F X      4096 = 15 X      4096 =      61440
     - 6 X     65536 =  6 X     65536 =    393,216
     - C X 1,048,576 = 14 X 1,048,576 = 12,582,912
                                        __________
                                        13,037,787
                                        ==========
- From Decimal to Hex
     3653
    /   \
   228  5 -> 5 
   / \
  14 4 -> 4 
  /\        
 0 14 -> E = E45

- Binary arthimetics
    - Addition
        0 + 0 = 0
        1 + 0 = 1
        1 + 1 = 10 cary one bit to next left
    1 + 1 + 1 = 11 Cary one bit to next left

    - Subtraction
        0 - 0 = 0
        0 - 1 = 1 Borrow one from left
        1 - 0 = 1
        1 - 1 = 0
    
    - Multiplication
        0 x 0 = 0
        0 x 1 = 0
        1 x 0 = 0
        1 x 1 = 1
    
